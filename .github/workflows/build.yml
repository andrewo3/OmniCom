name: OmniCom Python Wheel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: contains(github.event.head_commit.message, 'python version')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - if: matrix.os == 'ubuntu-latest'
        name: Install build dependencies Linux
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel cibuildwheel
          sudo apt-get install python3-pybind11
          pip freeze
      - if: matrix.os != 'Linux'
        name: Install build dependencies not Linux
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel cibuildwheel
          python -m pip install pybind11
          pip freeze

      - name: Build wheels
        run: |
          pip install wheel setuptools pip --upgrade
          cibuildwheel --output-dir dist

      - name: Upload wheels to PyPI
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'python version')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install twine
          twine upload --skip-existing --verbose dist/*
